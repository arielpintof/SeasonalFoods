@using SeasonalFoods.Enums
@using System.Collections.Immutable
@using Fluxor
@using SeasonalFoods.Pages
@using SeasonalFoods.Store.AdvancedSearch
@using Color = MudBlazor.Color
@using Size = MudBlazor.Size
@inject IDispatcher Dispatcher
@inject IState<FilterState> FiltersState
@inherits Fluxor.Blazor.Web.Components.FluxorComponent


<div class="container mt-2 mb-4">
    <section>
        <div class="d-flex flex-wrap gap-3">
            <div style="width: auto; min-width: 200px;">
                <MudSelectExtended Margin="Margin.Dense"
                                   ItemCollection="FoodGroupsNames"
                                   MultiSelection="true"
                                   SearchBox="true"
                                   SearchBoxAutoFocus="true"
                                   T="string"
                                   Label="Tipos de alimentos"
                                   AnchorOrigin="Origin.BottomCenter"
                                   Variant="Variant.Outlined"
                                   SearchBoxClearable="true"
                                   @bind-SelectedValues="FiltersDto.FoodGroups">
                </MudSelectExtended>
            </div>

            <div style="width: auto; min-width: 200px; ">
                <MudSelectExtended Margin="Margin.Dense"
                                   ItemCollection="SeasonNames"
                                   MultiSelection="false"
                                   T="string"
                                   Label="Estación del año"
                                   AnchorOrigin="Origin.BottomCenter"
                                   Variant="Variant.Outlined"
                                   @bind-Value="FiltersDto.Season">
                </MudSelectExtended>
            </div>

            <div style="width: auto; min-width: 200px; ">
                <MudSelectExtended ItemCollection="ShopPlacesNames"
                                   MultiSelection="true"
                                   T="string"
                                   Label="Tipo de comercio"
                                   AnchorOrigin="Origin.BottomCenter"
                                   Variant="Variant.Outlined"
                                   Margin="Margin.Dense"
                                   @bind-SelectedValues="FiltersDto.ShopPlace">
                </MudSelectExtended>
            </div>

            <div style="width: auto; min-width: 200px; ">
                <MudSelectExtended ItemCollection="RegionsNames"
                                   SearchBox="true"
                                   SearchBoxAutoFocus="true"
                                   T="string"
                                   Label="Región"
                                   AnchorOrigin="Origin.BottomCenter"
                                   Variant="Variant.Outlined"
                                   Margin="Margin.Dense"
                                   @bind-Value="FiltersDto.Region">
                </MudSelectExtended>
            </div>

            <MudButton Variant="Variant.Filled"
                       Size="Size.Medium"
                       Color="Color.Primary"
                       DisableElevation="true"
                       Style="text-transform: none; font-family: 'Plus Jakarta Sans', sans-serif; font-weight: 700;">
                Buscar
            </MudButton>
        </div>
    </section>
    
</div>


@code {
    
    private static ICollection<string> FoodGroupsNames => IEnum<FoodGroups, FoodGroupToken>
        .TokenDictionary()
        .Select(x => x.Value.ReadableName)
        .Skip(1)
        .ToList();

    private static ICollection<string> SeasonNames => IEnum<Seasons, SeasonToken>
        .TokenDictionary()
        .Select(x => x.Value.ReadableName)
        .Skip(1)
        .ToList();

    private static ICollection<string> ShopPlacesNames => IEnum<ShopPlaces, ShopPlacesToken>
        .TokenDictionary()
        .Select(x => x.Value.ReadableName)
        .Skip(1)
        .ToList();

    private static ICollection<string> RegionsNames => IEnum<Regions, RegionToken>
        .TokenDictionary()
        .Select(x => x.Value.ReadableName)
        .Skip(1)
        .ToList();


    private FiltersDto FiltersDto  => FiltersState.Value.Filters;

    private void UpdateFilters()
    {
        var action = new UpdateFilterAction(FiltersDto);
        Dispatcher.Dispatch(action);
    }
    

}